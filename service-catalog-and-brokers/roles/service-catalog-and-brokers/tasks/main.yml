---
# tasks file for service-catalog-and-brokers
#- name: "Create temporary directory"
#  tempfile:
#    state: directory
#    path: "/tmp/"
#  register: tmp_dir
#
#- name: Copy files to a know location
#  copy:
#    src: "{{ item }}"
#    dest: "{{ tmp_dir.path }}"
#  with_fileglob:
#    - "*"

- name: Create OpenShift Objects for Service Broker
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/service_catalog_api_server.yaml
  - ./files/service_catalog_controller_manager.yaml
#Â   args:
#    chdir: "{{ tmp_dir.path }}"

- name: Create OpenShift Objects for Automation Broker
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/broker_project.j2
  - ./templates/operator_group.j2
  - ./templates/catalog_source.j2
  - ./templates/subscription.j2

- name: Wait until CSV is Installed
  command: oc get csv "{{ _broker_subscription_csv }}" -o jsonpath --template='{.status.phase}' -n "{{ _broker_project }}"
  register: csv
  retries: 30
  delay: 10
  until: csv.stdout == "Succeeded"

- name: Create Automation Broker
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/automation_broker.j2

- name: Grant Automation Broker Service Account cluster-admin
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', './templates/cluster_role_binding.j2' ) | from_yaml }}"